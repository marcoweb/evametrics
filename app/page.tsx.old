"use client";

import React, { useState } from 'react';
import IndexingDataSet from './components/IndexingDataSet';
import { getMetrics } from './services/metrics.services';
import { parseGoldIndex } from './services/files.services';

export default function Home() {
  const processDataSet = (e) => {
    e.preventDefault();

    const data = getMetrics();
    console.log(data)

    const teste = parseGoldIndex('sss');

    console.log(teste.get('D12'))
  }

  const handleGoldIndexUpload = (event) => {
    const file = event.target.files[0];
    const reader = new FileReader();
    reader.onload = (e) => {
       const text = e.target.result;
       console.log(text);
    };
    reader.readAsText(file);
  }

  const [csvData, setCsvData] = useState([]);
  const [errorMessage, setErrorMessage] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const handleFileUpload = (event) => {
    const file = event.target.files[0];
    if (!file) {
      setErrorMessage('Please select a file.');
      return;
    }
    if (!file.name.endsWith('.csv')) {
      setErrorMessage('Please upload a CSV file.');
      return;
    }
    setIsLoading(true);
    const reader = new FileReader();
    reader.onload = (e) => {
      const text = e.target.result;
      const rows = text.split('\n').map((row) => row.split(';'));
      setCsvData(rows);
      setErrorMessage('');
      setIsLoading(false);
    };
    reader.readAsText(file);
  };

  return (
    <div className="m-8">
      <h1 className="p-4 font-bold text-3xl text-center">Indexing Metrics</h1>
      <form onSubmit={processDataSet}>
        <label htmlFor="goldIndexFile">Gold Index</label>
        <input type="file" name="goldIndexFile" id="goldIndexFile" onChange={handleGoldIndexUpload} />
        <IndexingDataSet />
        <button className="bg-sky-500 p-2 text-white w-full hover:bg-sky-600 transition-all cursor-pointer mt-4">Processar</button>
      </form>

      { errorMessage && <div style={{color:'red', marginBottom:'10px' }}>
        { errorMessage }</div> 
      }
      { isLoading ? 
        (
          <div style={{ textAlign:'center', marginTop:'20px' }}>
            Loading...
          </div>
        ) : 
        (
          csvData.length > 0 && ( 
          <table style={{ borderCollapse:'collapse', 
                          width:'100%', marginTop:'20px' }}>
            <tbody>
              { csvData.map((row, index) => (
                <tr key={index}>
                  { row.map((cell, cellIndex) => (
                    <td key={cellIndex} 
                        style={{ border:'1px solid #ccc', padding:'8px' }}>
                        {cell}
                    </td>
                  ))}
                </tr>
                ))
              }
            </tbody>
          </table>
          )
        )
      }
    </div>
  );
}
